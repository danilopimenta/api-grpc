// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hi.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SayingRequest struct {
	Say                  string   `protobuf:"bytes,1,opt,name=say,proto3" json:"say,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayingRequest) Reset()         { *m = SayingRequest{} }
func (m *SayingRequest) String() string { return proto.CompactTextString(m) }
func (*SayingRequest) ProtoMessage()    {}
func (*SayingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d092a8920edeec73, []int{0}
}

func (m *SayingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayingRequest.Unmarshal(m, b)
}
func (m *SayingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayingRequest.Marshal(b, m, deterministic)
}
func (m *SayingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayingRequest.Merge(m, src)
}
func (m *SayingRequest) XXX_Size() int {
	return xxx_messageInfo_SayingRequest.Size(m)
}
func (m *SayingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SayingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SayingRequest proto.InternalMessageInfo

func (m *SayingRequest) GetSay() string {
	if m != nil {
		return m.Say
	}
	return ""
}

type SayingResponse struct {
	Say                  string   `protobuf:"bytes,1,opt,name=say,proto3" json:"say,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SayingResponse) Reset()         { *m = SayingResponse{} }
func (m *SayingResponse) String() string { return proto.CompactTextString(m) }
func (*SayingResponse) ProtoMessage()    {}
func (*SayingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d092a8920edeec73, []int{1}
}

func (m *SayingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SayingResponse.Unmarshal(m, b)
}
func (m *SayingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SayingResponse.Marshal(b, m, deterministic)
}
func (m *SayingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SayingResponse.Merge(m, src)
}
func (m *SayingResponse) XXX_Size() int {
	return xxx_messageInfo_SayingResponse.Size(m)
}
func (m *SayingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SayingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SayingResponse proto.InternalMessageInfo

func (m *SayingResponse) GetSay() string {
	if m != nil {
		return m.Say
	}
	return ""
}

func init() {
	proto.RegisterType((*SayingRequest)(nil), "pb.SayingRequest")
	proto.RegisterType((*SayingResponse)(nil), "pb.SayingResponse")
}

func init() { proto.RegisterFile("hi.proto", fileDescriptor_d092a8920edeec73) }

var fileDescriptor_d092a8920edeec73 = []byte{
	// 119 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xc8, 0xc8, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x52, 0x52, 0xe4, 0xe2, 0x0d, 0x4e, 0xac, 0xcc,
	0xcc, 0x4b, 0x0f, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe0, 0x62, 0x2e, 0x4e, 0xac,
	0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x95, 0x94, 0xb8, 0xf8, 0x60, 0x4a, 0x8a,
	0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x31, 0xd5, 0x18, 0x99, 0x73, 0x31, 0x79, 0x64, 0x0a, 0x19, 0x72,
	0xb1, 0x41, 0x54, 0x0a, 0x09, 0xea, 0x15, 0x24, 0xe9, 0xa1, 0x18, 0x2c, 0x25, 0x84, 0x2c, 0x04,
	0x31, 0x48, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x14, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0,
	0xc1, 0x81, 0x65, 0x96, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HiClient is the client API for Hi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HiClient interface {
	Saying(ctx context.Context, in *SayingRequest, opts ...grpc.CallOption) (*SayingResponse, error)
}

type hiClient struct {
	cc *grpc.ClientConn
}

func NewHiClient(cc *grpc.ClientConn) HiClient {
	return &hiClient{cc}
}

func (c *hiClient) Saying(ctx context.Context, in *SayingRequest, opts ...grpc.CallOption) (*SayingResponse, error) {
	out := new(SayingResponse)
	err := c.cc.Invoke(ctx, "/pb.Hi/Saying", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HiServer is the server API for Hi service.
type HiServer interface {
	Saying(context.Context, *SayingRequest) (*SayingResponse, error)
}

func RegisterHiServer(s *grpc.Server, srv HiServer) {
	s.RegisterService(&_Hi_serviceDesc, srv)
}

func _Hi_Saying_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SayingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HiServer).Saying(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hi/Saying",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HiServer).Saying(ctx, req.(*SayingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Hi",
	HandlerType: (*HiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Saying",
			Handler:    _Hi_Saying_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hi.proto",
}
